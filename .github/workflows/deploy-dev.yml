name: deploy-dev

on:
  issue_comment:
    types: [created]

jobs:
  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - name: Echo github data for debug
        run: echo '${{ toJson(github) }}'
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/deploy"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ github.token }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: ubuntu-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.event.issue.user.login }}/${{ github.event.repository.name }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: "${{ github.token }}"

      - name: create deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          ref: '${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}'
          token: '${{ github.token }}'
          environment-url: http://pre.example.net
          environment: dev

      - name: deploy the pull request
        run: |
          # deployment logic goes here
          sleep 10


      - name: set pull request label to done
        uses: andymckay/labeler@master
        with:
          add-labels: "deploy state: âœ… done"
          remove-labels: "deploy state: ðŸ’€ failed"

      - name: set pull request label to failed
        uses: andymckay/labeler@master
        if: failure()
        with:
          add-labels: "deploy state: ðŸ’€ failed"
          remove-labels: "deploy state: âœ… done"

      - name: update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          ref: '${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}'
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'

      - name: update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          ref: '${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}'
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'
